// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String  @id @default(cuid())
  name         String
  email        String  @unique
  password     String
  role         String
  // emailVerified    DateTime?
  image        String?
  is2FAEnabled Boolean @default(false)
  twoFASecret  String?
  // accounts         Account[]
  // sessions         Session[]

  // Admin-specific tracking
  isActive      Boolean   @default(true)
  lastLogin     DateTime?
  loginAttempts Int       @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Account   Account[]
}

model Item {
  id          String   @id @default(cuid())
  referenceNo String   @unique
  itemType    String
  itemStatus  String
  purpose     String
  supplier    String
  oic         Boolean  @default(false)
  date        DateTime
}

// model Account {
//   id                String  @id @default(cuid())
//   userId            String
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String?
//   access_token      String?
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String?
//   session_state     String?

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model VerificationToken {
//   identifier String
//   token      String
//   expires    DateTime

//   @@unique([identifier, token])
// }
